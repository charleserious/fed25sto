name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build 06 Reactor
        shell: bash
        run: |
          # Navigate into the 06-reactor directory
          cd 06-reactor

          # Create a directory for build artifacts
          mkdir -p build-artifacts

          # Loop through each project directory and build the project
          for project in */ ; do
            # Only consider directories
            if [[ -d "$project" ]]; then
              echo "Building project: $project"
              cd $project

              # Install project dependencies using pnpm
              pnpm install

              # Build the project - assumes a script named 'build' is present in package.json
              pnpm run build

              # Move build artifacts to a separate directory
              mkdir -p ../build-artifacts/${project%/}
              mv dist/* ../build-artifacts/${project%/}

              # Navigate back to the 06-reactor directory
              cd ..

              # Remove the project source code to minimize artifacts
              rm -rf $project
            fi
          done

          # Move the build artifacts to the root
          # so they are available for the artifact upload
          mv build-artifacts/* ../

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
